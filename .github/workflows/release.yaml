name: release
on:
  push:
    tags:
      - '*-v[0-9]*.[0-9]*.[0-9]*'
jobs:
  release:
    runs-on: 'ubuntu-20.04'
    steps:

    # Setup
    - uses: actions/checkout@v3
      with:
        fetch-depth: 2
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
    - name: Configure Git
      run: |
        git config user.name "$GITHUB_ACTOR"
        git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
    - name: Install Helm
      uses: azure/setup-helm@v1
      with:
        version: v3.8.1


    # Gather Information
    - name: Get Short Ref
      id: gitref
      run: echo "::set-output name=result::$(git rev-parse --short HEAD)"

    - name: Extract Operator from Tag
      id: op_name
      uses: actions/github-script@0.2.0
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        result-encoding: string
        script: |
          return context.payload.ref.match(/refs\/tags\/(.*)-v([0-9]*.[0-9]*.[0-9]*.*)/)[1];

    - name: Extract Version from Tag
      id: op_version
      uses: actions/github-script@0.2.0
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        result-encoding: string
        script: |
          return context.payload.ref.match(/refs\/tags\/(.*)-v([0-9]*.[0-9]*.[0-9]*)/)[2];

    # Check Versions
    - name: Check If Versions Match
      run: |
        op_name=${{steps.op_name.outputs.result}}

        cargo_version=$(cargo pkgid \
            --manifest-path "$op_name/Cargo.toml" | \
          cut -d'#' -f 2)
        helm_version=$(sed -n '/^version: / s/version: *// p' "charts/$op_name/Chart.yaml")
        helm_appversion=$(sed -n '/^appVersion: / s/appVersion: *// p' "charts/$op_name/Chart.yaml" | tr -d "\"'")

        set -x
        test "${cargo_version}"   = "${{steps.op_version.outputs.result}}"
        test "${helm_version}"    = "${{steps.op_version.outputs.result}}"
        test "${helm_appversion}" = "${{steps.op_version.outputs.result}}"

    # Docker
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: |
          withlazers/${{ steps.op_verion.outputs.result }}
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        push: true
        tags: |
          sha-${{steps.gitref.outputs.result}}
          ${{steps.op_version.outputs.result}}
        labels: ${{ steps.meta.outputs.labels }}
        context: ./${{ steps.op_verion.outputs.result }}

    #- name: release
    #  uses: softprops/action-gh-release@v1
    #  with:
    #    files: |
    #      target/x86_64-unknown-linux-musl/release/tpl

