name: Release
on:
  push:
    tags:
      - '*-v[0-9]*.[0-9]*.[0-9]*'
jobs:
  prepare:
    runs-on: 'ubuntu-latest'

    outputs:
      op_name: ${{ steps.op_name.outputs.result }}
      op_version: ${{ steps.op_version.outputs.result }}
    steps:
    - uses: actions/checkout@v3

    # Setup
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
    - name: Configure Git
      run: |
        git config user.name "$GITHUB_ACTOR"
        git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
    - name: Install Helm
      uses: azure/setup-helm@v1
      with:
        version: v3.8.1

    # Gather Information
    - name: Extract Operator from Tag
      id: op_name
      uses: actions/github-script@v6
      env:
        REF_NAME: ${{ github.ref_name }}
      with:
        result-encoding: string
        script: |
          return process.env.REF_NAME.match(/(.*)-v([0-9]*.[0-9]*.[0-9]*.*)/)[1];
    - name: Extract Version from Tag
      id: op_version
      uses: actions/github-script@v6
      env:
        REF_NAME: ${{ github.ref_name }}
      with:
        result-encoding: string
        script: |
          return process.env.REF_NAME.match(/(.*)-v([0-9]*.[0-9]*.[0-9]*)/)[2];

    # Check Versions
    - name: Check If Versions Match
      run: |
        op_name=${{ steps.op_name.outputs.result }}

        cargo_version=$(cargo pkgid \
            --manifest-path "$op_name/Cargo.toml" | \
          cut -d'#' -f 2)
        helm_version=$(sed -n '/^version: / s/version: *// p' "charts/$op_name/Chart.yaml")
        helm_appversion=$(sed -n '/^appVersion: / s/appVersion: *// p' "charts/$op_name/Chart.yaml" | tr -d "\"'")

        set -x
        test "${cargo_version}"   = "${{ steps.op_version.outputs.result }}"
        test "${helm_version}"    = "${{ steps.op_version.outputs.result }}"
        test "${helm_appversion}" = "${{ steps.op_version.outputs.result }}"

  build:
    needs: prepare
    runs-on: 'ubuntu-latest'
    strategy:
      matrix:
        target:
        - aarch64-unknown-linux-musl
        - i686-unknown-linux-musl
        - x86_64-unknown-linux-musl
        - armv7-unknown-linux-musleabihf

    steps:
    - uses: actions/checkout@v3

    - uses: withlazers/rust-build-action@main
      with:
        target: ${{ matrix.target }}
        use-cross: false
        binaries: operator
        archive-prefix: ${{ needs.prepare.outputs.op_name }}-${{ needs.prepare.outputs.op_version }}

  container:
    needs:
    - build
    - prepare
    runs-on: 'ubuntu-latest'

    steps:
    - uses: actions/checkout@v3
    - uses: withlazers/container-action@main
      with:
        repository: ${{ needs.prepare.outputs.op_name }}
        password: ${{ secrets.DOCKER_TOKEN }}
        ref-tags: v${{ needs.prepare.outputs.op_version }}

  release:
    needs:
    - prepare
    - build
    - container
    runs-on: 'ubuntu-latest'

    steps:
    - uses: withlazers/release-action@main
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        ssh_key: ${{ secrets.HELMCHART_SSH_DEPLOY_KEY }}
        helm_chart: ${{ needs.prepare.outputs.op_name }}
